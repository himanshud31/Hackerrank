#include<bits/stdc++.h>
using namespace std;
map<int,int> m1,m2;
int krushkals(vector<int> v1,vector<int> v2,vector<int> v3,int n)
{
	vector<pair<int,pair<int,int>>> v;
	
	for(int i=0;i<v3.size();i++)
	{
		pair<int,pair<int,int>> p;
		p.first=v3[i];
		p.second.first=v1[i];
		p.second.second=v2[i];
		v.push_back(p);
	}
	

	sort(v.begin(),v.end());
	
	for(int i=0;i<n;i++)
	{
		m2[i]=i;
	}
	int cost=0;
	auto itr=v.begin();
	while(itr!=v.end())
	{
		
		int parent1=itr->second.first;
		int parent2=itr->second.second;
		
		int k=parent1;
		while(k!=m2[k])
		{
			k=m2[k];
		}
		parent1=k;
		k=parent2;
		while(k!=m2[k])
		{
			k=m2[k];
		}
		parent2=k;
	
	cout<<parent1<<" "<<parent2;
	if(parent1!=parent2){
		cost=cost+itr->first;
		m2[parent1]=parent2;
		}
		cout<<" "<<cost<<endl;
		itr++;
	}
	return cost;
}
main()
{
	vector<int> v1,v2,v3;
	int n,e;
	
	cin>>n>>e;
	
	for(int i=0;i<e;i++)
	{
		int x,y,z;
		cin>>x>>y>>z;
		v1.push_back(x);
		v2.push_back(y);
		v3.push_back(z);
	}
	cout<<krushkals(v1,v2,v3,n);
}
